{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/var.js"],"names":["vm","data","test","test2","content","observe","Object","keys","forEach","defineReactive","key","val","dep","Dep","defineProperty","enumerable","configurable","get","target","addSub","set","console","log","newVal","notify","subs","sub","push","update","Watcher","node","name","nodeValue","value","compile","regMoustache","regDirectives","nodeType","element","attrs","attributes","Array","from","nodeName","attr","directives","RegExp","$1","removeAttribute","addEventListener","e","text","trim","node2fragment","fragment","document","createDocumentFragment","child","firstChild","append","wrap","querySelector","appendChild","NODE_TYPE","comment","DIRECTIVES"],"mappings":"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","file":"index.js","sourcesContent":["import { NODE_TYPE, DIRECTIVES } from './var';\n\nconst vm = {\n    data: {\n        test: 'test',\n        test2: 'test2',\n        content: 'content'\n    }\n};\n\nvm.data.test = 'notest';\nvm.data.test2 = 'hhh';\n\nfunction observe(data) {\n    if (!data || typeof data !== 'object') {\n        return;\n    }\n\n    Object.keys(data).forEach(key => {\n        defineReactive(data, key, data[key]);\n    });\n}\n\nfunction defineReactive(data, key, val) {\n    observe(val);\n\n    const dep = new Dep();\n\n    Object.defineProperty(data, key, {\n        enumerable: true,\n        configurable: false,\n        get: () => {\n            if (Dep.target) {\n                dep.addSub(Dep.target);\n            }\n            return val;\n        },\n        set: newVal => {\n            console.log('value changed', val, newVal);\n            val = newVal;\n\n            dep.notify();\n        }\n    });\n}\n\nclass Dep {\n    constructor () {\n        this.subs = [];\n        this.target = null;\n    }\n\n    addSub (sub) {\n        console.log('sub:', this.subs);\n        this.subs.push(sub);\n    }\n\n    notify () {\n        console.log('notify');\n        this.subs.forEach(sub => {\n            console.log(sub);\n            sub.update();\n        });\n    }\n}\nDep.target = null;\n\nclass Watcher {\n    constructor (vm, node, name) {\n        Dep.target = this;\n        // console.log(Dep.target);\n        this.vm = vm;\n        this.node = node;\n        this.name = name;\n        this.update();\n        Dep.target = null;\n    }\n\n    update () {\n        this.get();\n        this.node.nodeValue ? \n            this.node.nodeValue = this.value : \n            this.node.value = this.value;\n    }\n\n    get () {\n        // console.log('vm', this.vm);\n        this.value = this.vm.data[this.name];\n    }\n}\n\nfunction compile (node, vm) {\n    const regMoustache = /\\{\\{(.*?)\\}\\}/;\n    const regDirectives = /g-([\\s\\S]+)/;\n    const nodeType = node.nodeType;\n    // console.log(nodeType);\n    if (nodeType == NODE_TYPE.element) {\n        // console.log(node);\n        const attrs = node.attributes;\n\n        Array.from(attrs, attr => {\n            const nodeName = attr.nodeName;\n\n            if (!regDirectives.test(nodeName)) {\n                return;\n            }\n\n            const directives = RegExp.$1;\n\n            if (directives === 'bind') {\n                const name = attr.nodeValue;\n                node.value = vm.data[name];\n                node.removeAttribute(nodeName);\n\n                node.addEventListener('input', e => {\n                    vm.data[name] = e.target.value;\n\n                    console.log(vm);\n                });\n\n                new Watcher(vm, node, name);\n            }\n        });\n        \n    }\n\n    if (nodeType == NODE_TYPE.text) {\n        // console.log(node);\n        if (!regMoustache.test(node.nodeValue)) {\n            return;\n        }\n\n        const name = (RegExp.$1).trim();\n        // node.nodeValue = vm.data[name];\n\n        new Watcher(vm, node, name);\n    }\n}\n\nfunction node2fragment (node) {\n    const fragment = document.createDocumentFragment();\n    let child;\n\n    while (child = node.firstChild) {\n        compile(child, vm);\n        fragment.append(child);\n    }\n\n    return fragment;\n}\n\nobserve(vm);\nconst wrap = document.querySelector('.wrap');\nconst node = node2fragment(wrap);\nconsole.log(node);\nwrap.appendChild(node);\n\ndocument.querySelector('input[value=change]').addEventListener('click', () => {\n    vm.data.content = 'change';\n});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export const NODE_TYPE = {\n    element: 1,\n    text: 3,\n    comment: 8\n}\n\nexport const DIRECTIVES = [\n    'bind'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/var.js"],"sourceRoot":""}